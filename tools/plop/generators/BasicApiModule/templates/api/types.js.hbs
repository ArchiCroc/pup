{{#*inline "schemaFieldType"}}
{{name}}: {{#compare this.type '===' 'Object'}}{{ pascalCase @root.singularName }}{{ pascalCase name }}{{else}}{{cleanGraphqlType type}}{{/compare}}
{{/inline}}
{{#*inline "schemaFieldInput"}}
{{name}}: {{#compare this.type '===' 'Object'}}{{ pascalCase @root.singularName }}{{ pascalCase name }}Input{{else}}{{cleanGraphqlType this.type}}{{/compare}}{{#compare this.validate.optional '==' undefined '||' this.validate.optional '==' false}}{{#compare this.defaultValue '==' undefined}}!{{/compare}}{{/compare}}
{{/inline ~}}

export default `
{{#each schema.fields ~}}
{{#compare this.type '===' 'Object'}}
{{#if this.fields}}
type {{ pascalCase @root.singularName }}{{ pascalCase @key }} {
  {{#each this.fields ~}}
    {{#if this.type}}
      {{#compare this.type '===' 'CrossReference'}}
  {{> schemaFieldType this.input }}
  {{> schemaFieldType this.reference name=@key }}
      {{else}}
  {{> schemaFieldType name=@key}}
      {{/compare}}
    {{/if}}
  {{/each}}
}
{{/if}}
{{/compare}}
{{~/each}}

type {{ pascalCase singularName }} {
{{#each schema.fields ~}}
  {{~#if this.type}}
    {{#compare this.type '===' 'CrossReference'}}
  {{> schemaFieldType this.input }}
  {{> schemaFieldType this.reference name=@key }}
    {{else}}
  {{> schemaFieldType name=@key}}
    {{/compare}}
  {{/if~}}
{{~/each}}
}

type {{ pascalCase pluralName }} {
  total: Int
  {{ camelCase pluralName }}: [{{ pascalCase singularName }}]
}

{{#each schema.fields ~}}
{{#compare this.type '===' 'Object'}}{{!-- this may need to be extended to subtypes too --}}
{{#if this.fields}}
input {{ pascalCase @root.singularName }}{{ pascalCase @key }}Input {
  {{#each this.fields ~}}
    {{~#compare this.type '&&' this.input}}
      {{#compare this.input 'typeof' 'object'}}
  {{> schemaFieldType this.input }}
      {{else}}
  {{> schemaFieldType name=@key}}
      {{/compare}}
    {{/compare~}}
  {{/each}}
}
{{/if}}
{{/compare}}
{{~/each}}

input {{ pascalCase singularName }}Input {
{{#each schema.fields }}
  {{~#compare this.type '&&' this.input '&&' this.input.input '!typeof' undefined}}
    {{#compare this.input 'typeof' 'object'}}
  {{> schemaFieldType this.input }}
    {{else}}
  {{> schemaFieldType name=@key}}
    {{/compare}}
  {{/compare~}}
{{/each~}}
}
`;
