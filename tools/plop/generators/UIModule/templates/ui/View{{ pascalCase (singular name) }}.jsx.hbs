import React from 'react';
import PropTypes from 'prop-types';
import i18n from 'meteor/universe:i18n';
import { useQuery } from '@apollo/react-hooks';
import Row from 'antd/lib/row';
import Col from 'antd/lib/col';
import PageHeader from '../components/PageHeader';
import Loading from '../components/Loading';
import NotFound from '../pages/NotFound';
import { {{ camelCase (singular name) }} as {{ camelCase (singular name) }}Query } from './queries/{{ pascalCase name }}.gql';

import StyledView{{ pascalCase (singular name) }} from './StyledView{{ pascalCase (singular name) }}';

const View{{ pascalCase (singular name) }} = ({ history, match }) => {
  const { loading, data: { {{ camelCase (singular name) }} } = {} } = useQuery({{ camelCase (singular name) }}Query, { variables: { slug: match.params.slug } });

  return (
    <StyledView{{ pascalCase (singular name) }}>
      <PageHeader title={i18n.__('{{ pascalCase name }}.view_{{ snakeCase (singular name) }}')} />
      <Row>
        <Col xs={24} sm={16} md={12} lg={8}>
          {loading ? (
            <Loading />
          ) : (
            <>{ {{~ camelCase (singular name) }} ? <View{{ pascalCase (singular name) }}Fields {{ camelCase (singular name) }}={ {{~ camelCase (singular name) ~}} } /> : <NotFound />}</>
          )}
        </Col>
      </Row>
    </StyledView{{ pascalCase (singular name) }}>
  );
};

View{{ pascalCase (singular name) }}.propTypes = {
  history: PropTypes.object.isRequired,
  match: PropTypes.object.isRequired,
};

const View{{ pascalCase (singular name) }}Fields = ({ {{ camelCase (singular name) }} }) => {
  return (
    <>
      {Object.entries({{ camelCase (singular name) }}).map(([key, value]) => (
        <View{{ pascalCase (singular name) }}Field key={key} value={value} />
      ))}
    </>
  );
};

View{{ pascalCase (singular name) }}Fields.propTypes = {
  {{ camelCase (singular name) }}: PropTypes.object.isRequired,
};

const View{{ pascalCase (singular name) }}Field = ({ key, value }) => {
  return (
    <Row key={key}>
      <Col xs={12} sm={8} md={6} lg={4}>
        {key}
      </Col>
      <Col xs={12} sm={8} md={6} lg={4}>
        {value}
      </Col>
    </Row>
  );
};

View{{ pascalCase (singular name) }}Field.propTypes = {
  key: PropTypes.string.isRequired,
  value: PropTypes.any.isRequired,
};

export default View{{ pascalCase (singular name) }};
