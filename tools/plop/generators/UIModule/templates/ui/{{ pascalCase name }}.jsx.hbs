import React from 'react';
import PropTypes from 'prop-types';
import i18n from 'meteor/universe:i18n';
import { useQuery } from '@apollo/react-hooks';
import Table from 'antd/lib/table';
import PageHeader from '../components/PageHeader';
import PrettyDate from '../components/PrettyDate';

import New{{ pascalCase (singular name) }}Button from './components/New{{ pascalCase (singular name) }}Button';

import Styled{{ pascalCase name }} from './Styled{{ pascalCase name }}';

import { {{ camelCase name }} as {{ camelCase name }}Query } from './queries/{{ pascalCase name }}.gql';

const {{ pascalCase name }} = ({ history }) => {
  const { loading, data: { {{ camelCase name }} } = {} } = useQuery({{ camelCase name }}Query);

  const columns = [
{{#each schema.fields ~}}
  {{#compare this.input '!==' 'Hidden' '&&' this.table '!==' false}}
    {{~#compare this.input '||' this.table }}
    {
      title: i18n.__(' {{~ pascalCase @root.name ~}} .{{ snakeCase @key }}'),
      dataIndex: '{{ @key }}',
      {{#compare this.type '===' 'String'}}
      sorter: true,
      defaultSortOrder: 'ascend',
      // render: (value, record) => <Link to={`/{{ dashCase @root.name }}/${record.{{ @root.urlKeyField ~}} }/edit`}>{value}</Link>, // eslint-disable-line
      {{/compare}}
      {{#compare this.type 'in' 'Date|DateTime|Time'}}
      sorter: true,
      defaultSortOrder: 'descend',
      render: ({{ @key }}) => <PrettyDate timestamp={ {{~ @key ~}} } />, // eslint-disable-line 
      {{/compare}}
      {{#compare this.type '===' 'Boolean'}}
      sorter: true,
      // defaultSortOrder: 'ascend',
      render: (value, record, index) => i18n.__(`{{ pascalCase @root.name }}.${value ? 'yes' : 'no'}`),
      {{/compare}}
      {{#compare this.type '===' 'Number'}}
      sorter: true,
      // defaultSortOrder: 'ascend',
      render: (value, record) => value, // eslint-disable-line
      {{/compare}}
      {{#compare this.input 'in' 'Array|Select|Options|Dropdown'  }}
      sorter: true,
      // defaultSortOrder: 'ascend',
      {{#if this.choices}}
      render: (value, record) => i18n.__(`{{ pascalCase @root.name }}.{{@key}}_${value}`), // eslint-disable-line
      {{/if}}
      {{/compare}}
    },
    {{/compare}}
  {{/compare}}
{{/each}}
  ];

  const handleOnRow = (record) => {
    return {
      onClick: () => {
        history.push(`/{{ dashCase name }}/${record.{{ urlKeyField ~}} }`);
      },
    };
  };

  return (
    <Styled{{ pascalCase name }}>
      <PageHeader title={i18n.__('{{ pascalCase name }}.{{ snakeCase (singular name) }}_plural')} />
      <p>
        <New{{ pascalCase (singular name) }}Button />
      </p>
      <Table
        dataSource={ {{~ camelCase name }} && {{ camelCase name }}.{{ camelCase name ~}} }
        columns={columns}
        rowKey="{{ primaryKeyField }}"
        rowClassName="clickable"
        onRow={handleOnRow}
        pagination={false}
        loading={loading}
      />
    </Styled{{ pascalCase name }}>
  );
};

{{ pascalCase name }}.propTypes = {
  history: PropTypes.object.isRequired,
};

export default {{ pascalCase name }};
