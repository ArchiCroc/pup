import React from 'react';
import PropTypes from 'prop-types';
import i18n from 'meteor/universe:i18n';
import { useQuery /* , useMutation */ } from '@apollo/react-hooks';
import Row from 'antd/lib/row';
import Col from 'antd/lib/col';
import Divider from 'antd/lib/divider';
import PageHeader from '../components/PageHeader';
import {{ pascalCase (singular name) }}Editor from './components/{{ pascalCase (singular name) }}Editor';
import Loading from '../components/Loading';
import NotFound from '../pages/NotFound';
import Remove{{ pascalCase (singular name) }}Button from './components/Remove{{ pascalCase (singular name) }}Button';

import { edit{{ pascalCase (singular name) }} as {{ camelCase (singular name) }}Query } from './queries/{{ pascalCase name }}.gql';

const Edit{{ pascalCase (singular name) }} = ({ history, match }) => {
  const { loading, data: { {{ camelCase (singular name) }} = undefined } = {} } = useQuery({{ camelCase (singular name) }}Query, { 
    variables: { {{ urlKeyField }}: match.params.{{ urlKeyField }} } 
  });

  return (
    <>
      <PageHeader title={i18n.__('{{ pascalCase name }}.edit_{{ snakeCase (singular name) }}')} />
      <Row>
        <Col xs={24} sm={16} md={12} lg={8}>
          {loading ? (
            <Loading />
          ) : (
            <>{ {{~ camelCase (singular name) }} ? <{{ pascalCase (singular name) }}Editor doc={ {{~ camelCase (singular name) ~}} } history={history} /> : <NotFound />}</>
          )}
          <Divider />
          { {{~ camelCase (singular name) }} && <Remove{{ pascalCase (singular name) }}Button {{urlKeyField}}={ {{~ camelCase (singular name) }}.{{urlKeyField ~}}  } {{labelKeyField}}={ {{~ camelCase (singular name) ~}}.{{labelKeyField}} } />}
        </Col>
      </Row>
    </>
  );
};

Edit{{ pascalCase (singular name) }}.propTypes = {
  history: PropTypes.object.isRequired,
  match: PropTypes.object.isRequired,
};

export default Edit{{ pascalCase (singular name) }};
