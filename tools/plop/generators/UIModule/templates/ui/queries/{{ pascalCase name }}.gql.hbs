#import "../fragments/{{ pascalCase name }}.gql"

query {{ camelCase name }}(
  $_ids: [String]
  $page: Int, 
  $pageSize: Int, 
  $search: String, 
  $sort: String, 
  $order: String,
  {{#each schema.fields}}
    {{#if this.filterable}}
      {{#compare this.type 'in' 'String|Int|Float|Number'}}
  ${{ @key }}: [{{#compare this.type '===' 'Number'}}Float{{else}}{{this.type}}{{/compare}}],
        {{else}}
  ${{ @key }}: {{#compare this.type '===' 'Number'}}Float{{else}}{{this.type}}{{/compare}},
        {{/compare}}
    {{/if}}
  {{/each}}
) {
  {{ camelCase name }}(
    _ids: $_ids,
    page: $page, 
    pageSize: $pageSize, 
    search: $search, 
    sort: $sort, 
    order: $order,
    {{#each schema.fields}}
      {{#if this.filterable}}
    {{ @key }}: ${{@key}},
      {{/if}}
    {{/each}}
  ) {
    total
    {{ camelCase name }} {
      ...{{ pascalCase (singular name) }}Attributes
    }
  }
}

query edit{{ pascalCase (singular name) }}(${{ primaryKeyField }}: {{ primaryKeyType }}{{#compare primaryKeyField '!==' urlKeyField }}, ${{ urlKeyField }}: {{ urlKeyType }}{{/compare}}) {
  {{ camelCase (singular name) }}({{ primaryKeyField }}: ${{ primaryKeyField }}{{#compare primaryKeyField '!==' urlKeyField }}, {{ urlKeyField }}: ${{ urlKeyField }}{{/compare}}) {
    ...{{ pascalCase (singular name) }}Attributes
  }
}

query {{ camelCase (singular name) }}(${{ primaryKeyField }}: {{ primaryKeyType }}{{#compare primaryKeyField '!==' urlKeyField }}, ${{ urlKeyField }}: {{ urlKeyType }}{{/compare}}) {
  {{ camelCase (singular name) }}({{ primaryKeyField }}: ${{ primaryKeyField }}{{#compare primaryKeyField '!==' urlKeyField }}, {{ urlKeyField }}: ${{ urlKeyField }}{{/compare}}) {
    ...{{ pascalCase (singular name) }}Attributes
  }
}
