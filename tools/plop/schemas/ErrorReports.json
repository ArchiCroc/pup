{ 
  "name": "ErrorReports",
  "uiRouteBasePath": "/admin/error-reports",
  "permissions": {
    "read":"admin",
    "save": "admin",
    "delete":"admin"
  },
  "menu": {
    "index": "admin"
  },
    
  "fields": {
    "_id": {
      "primaryKey": true,
      "urlKey": true,
      "type": "ObjectID",
      "input": "Hidden",
      "validate" : {
        "max": 24,
        "optional": true
      }
    },
    "user": {
      "type": "User",
      "input": {
        "name": "userId",
        "type": "String",
        "input": "CrossReferenceSearch"
      },
      "reference":{
        "query": "users",
        "edges": "users",
        "labelKey": "fullName",
        "valueKey": "_id",
        "idType": "String"
      },
      "validate" : {
        "optional": true
      },
      "showInTableView": true,
      "mockTemplateFile": "mock-user"
    },
    "level": {
      "type": "Int",
      "input": "Select",
      "choices": { "Silly": 0, "Debug": 1, "Verbose": 2, "Info": 3, "Warning": 4, "Error": 5 },
      "clean": "(item) => parseInt(item, 10);",
      "filterable": true
    },
    "message": {
      "labelKey": true,
      "type": "String",
      "input": "Text",
      "validate" : {
          "max": 2048
      },
      "searchable": true
    },
    "path": {
      "type": "String",
      "input": "Text",
      "validate" : {
        "max": 1024,
        "optional": true
      },
      "searchable": true
    },
    "userAgent": {
      "type": "String",
      "input": "Text",
      "validate" : {
        "max": 1024,
        "optional": true
      },
      "searchable": true
    },
    "stack": {
      "type": "[String]",
      "input": "Text",
      "validate" : {
          "optional": true
      },
      "showInTableView": false,
      "searchable": true
    },
    "reactStack": {
      "type": "[String]",
      "input": "Text",
      "validate" : {
          "optional": true
      },
      "showInTableView": false,
      "searchable": true
    },
    "createdAt": {
      "type": "DateTime",
      "showInTableView": "Created At"
    },
    "createdBy": {
      "type": "User",
      "input": {
        "name": "createdById",
        "type": "String"
      },
      "reference": {
        "labelKey": "fullName",
        "valueKey": "_id"
      },
      "showInTableView": false
    }
  },
  "restApi": {
    "imports": [],
    "routes": [
      {
        "method": "post",
        "path": "",
        "async": false,
        "code": "if (!request.body) { throw ApiRoutes.Error('Api Error', 'Missing Post Data'); } const cleanDoc = {{pascalCase singularName}}Schema.clean(request.body); {{pascalCase singularName}}Schema.validate(cleanDoc); if (request.body.userToken) { Meteor.users.findOne(); } const userId = (request.user && request.user._id) || null; cleanDoc.createdById = userId; cleanDoc.createdAt = new Date(); const {{camelCase singularName}}Id = {{pascalCase pluralName}}.insert(cleanDoc); response.writeHead(204); response.end();"
      }
    ]
  },
  "defaultSortField": "createdAt",
  "defaultSortOrder": "descend"
}
